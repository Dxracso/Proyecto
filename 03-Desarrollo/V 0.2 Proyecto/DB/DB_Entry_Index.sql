DROP SCHEMA if exists DB_ENTRY_INDEX;
CREATE SCHEMA DB_ENTRY_INDEX;

CREATE TABLE DB_ENTRY_INDEX.CUENTA(
NUMERO_DOCUMENTO VARCHAR (12) COMMENT 'EL NUMERO DEL DOCUMENTO DEL USUARIO',
TIPO_DOCUMENTO VARCHAR (45) COMMENT 'eL TIPO DEL DOCUMENTO DEL USUARIO',
FOTO blob COMMENT'LA FOTO DEL USAURIO',--
PRIMER_NOMBRE VARCHAR (45) NOT NULL COMMENT 'EL PRIMER NOMBRE DEL USUARIO',
SEGUNDO_NOMBRE VARCHAR (45) COMMENT 'SEGUNDO NOMBRE DEL USUARIO Y PUEDE SER OPCIONAL',
PRIMER_APELLIDO VARCHAR (45) NOT NULL COMMENT 'PRIMER APELLIDO DEL USUARIO',
SEGUNDO_APELLIDO VARCHAR (45) COMMENT 'SEGUNDO APELLIDO DEL USAURIO ES OPCIONAL',
CARGO VARCHAR (45) COMMENT 'EL ROL QUE CUMPLE EN LA ENTIDAD VISITANTE,APRENDIZ,FUNCIONARIO,INSTRUCTOR,ETC...',
primary key (NUMERO_DOCUMENTO,TIPO_DOCUMENTO) comment'LLAVE COMPUESTA ENTRE LOS DOS CAMPOS',
FECHA_FINALIZACION date COMMENT 'LA FECHA DE TERMINACION DE LA FORMACION EN EL SENA'
,ESTADO boolean not null COMMENT 'EL ESTADO DE UNA CUENTA, YA QUE SE PUEDEN DESHABILITAR CLIENTES'
);

CREATE TABLE DB_ENTRY_INDEX.REGISTRO(
NUMERO_REGISTRO INT auto_increment  COMMENT 'EL NUMERO DEL REGISTRO EL CUAL SE HAGA EN EL SISTEMA Y VA AUTOINCREMNTAL',
FECHA_ENTRADA datetime  NOT NULL COMMENT 'LA FECHA DE ENTRADA DE UN USAURIO',
FECHA_SALIDA datetime COMMENT 'FECHA DE SALIDA DE UN USUARIO',
CUENTA_NUMERO_DOCUMENTO VARCHAR (12) NOT null COMMENT 'EL NUMERO DEL DOCUMENTO DEL USUARIO EL CUAL VA A SER MOSTRADO EN EL REGISTRO',
CUENTA_TIPO_DOCUMENTO VARCHAR (45) NOT NULL COMMENT 'EL TIPO DEL DOCUEMTNO DEL USUARIO EL CUAL VA A ESTAR ENLAZADO CON EL REGISTRO',
VISITA VARCHAR (200) COMMENT 'LA RAZON POR LA QUE ENTRA A LA SEDE Y A QUIEN VA ES OPCIONA SOLO PARA VISITANTES',
ROL_VISITA VARCHAR (20)  COMMENT 'LA RAZON SE DEBE POR SI EL USUARIO ES VISITANTE',
primary key(NUMERO_REGISTRO) COMMENT 'EL NUMERO COMO LLAVE PRIMARIA PARA QUE NO SE PUEDA REPETIR',
CONSTRAINT FK_CUENTA_REGISTRO foreign key (CUENTA_NUMERO_DOCUMENTO,CUENTA_TIPO_DOCUMENTO)  references DB_ENTRY_INDEX.CUENTA (NUMERO_DOCUMENTO,TIPO_DOCUMENTO) 
on update cascade);

CREATE TABLE DB_ENTRY_INDEX.USUARIO(
CORREO_ELECTRONICO VARCHAR (100) COMMENT 'EL LOGIN DE UN USUARIO EL CUAL VA A TENER ACCESO AL SISTEMA',
CONTRASENA VARCHAR (45) NOT NULL  COMMENT 'LA CONTRASEÑA DEL USUARIO PARA ENTRA AL SISTEMA',
ROLL VARCHAR (45)NOT NULL COMMENT 'EL PAPEL QUE DESEPEÑARA UN USUARIO DENTRO DE SISTEMA(MODERADOR, ADMINISTRADOR ETC...)',
CUENTA_NUMERO_DOCUMENTO VARCHAR (12) NOT NULL COMMENT 'EL NUMERO DEL DOCUMENTO DE LA CUENTA',
CUENTA_TIPO_DOCUMENTO VARCHAR (45) NOT NULL COMMENT 'EL TIPO DEL DOCUMENTO DE LA CUENTA',
primary key (CORREO_ELECTRONICO) COMMENT 'LLAVE COMPUESTA PARA QUE NO PUEDA HABER DATOS IGUALES EN EL SISTEMA',
ACTIVO boolean not null COMMENT 'EL ESTADO DE UNA CUENTA ADMINISTRADORA, YA QUE SE PUEDEN DESHABILITAR ADMINISTRADORES',
CONSTRAINT FK_CUENTA_USUARIO foreign key(CUENTA_NUMERO_DOCUMENTO,CUENTA_TIPO_DOCUMENTO)
references DB_ENTRY_INDEX.CUENTA (NUMERO_DOCUMENTO,TIPO_DOCUMENTO)
on update cascade
);

CREATE TABLE DB_ENTRY_INDEX.EQUIPO (
ID_EQUIPO varchar(45) COMMENT 'EL ID DEL EQUIPO O EL NUMERO DEL EQUIPO',
DESCRIPCION VARCHAR (200) NOT NULL COMMENT 'LA DESCRIPCION DEL EQUIPO',
primary key(ID_EQUIPO)COMMENT 'LLAVE PRIMARIA PARA QUE NO HAYA UN EQUIPO REPETIDO',
ESTADO boolean not null COMMENT 'El estado del equipo si se encuentra activo o inactivo en el sistema'
);

CREATE TABLE DB_ENTRY_INDEX.PROPIETARIO (
EQUIPO_ID_EQUIPO varchar(45) COMMENT 'EL ID DEL EQUIPO DE REGISTRO DEL EQUIPO',
CUENTA_NUMERO_DOCUMENTO VARCHAR (12) NOT NULL COMMENT 'EL NUMERO DEL DOCUMENTO DE LA CUENTA',
CUENTA_TIPO_DOCUMENTO VARCHAR (45) NOT NULL COMMENT 'EL TIPO DEL DOCUMENTO DE LA CUENTA',
primary key(EQUIPO_ID_EQUIPO,CUENTA_NUMERO_DOCUMENTO,CUENTA_TIPO_DOCUMENTO) COMMENT 'LLAVE PRIMARIA PARA QUE NO SE HAYA UN EQUIPO REPETIDO',
CONSTRAINT FK_EQUIPO_PROPIETARIO foreign key(equipo_id_equipo) references DB_ENTRY_INDEX.EQUIPO(ID_EQUIPO),
constraint FK_CUENTA_PROPIETARIO foreign key (CUENTA_NUMERO_DOCUMENTO,CUENTA_TIPO_DOCUMENTO) references DB_ENTRY_INDEX.cuenta(NUMERO_DOCUMENTO,TIPO_DOCUMENTO) 
on update cascade
);

CREATE TABLE DB_ENTRY_INDEX.REGISTRO_EQUIPO(
NUMERO_REGISTRO INT COMMENT 'EL NUMERO DEL REGISTRO DEL EQUIPO ES EL MISMO QUE LA DEL REGISTRO DEL USUARIO',
FECHA_ENTRADA DATETIME not null COMMENT 'LA FECHA DE ENTRADA DEL EQUIPO',
EQUIPO_ID_EQUIPO varchar(45) COMMENT 'EL ID DEL EQUIPO',
FECHA_SALIDA DATETIME COMMENT  'LA FECHA DE SALIDA DEL EQUIPO',
constraint FK_REGISTRO_EQUIPO foreign key (numero_registro) references DB_ENTRY_INDEX.registro(numero_registro),
primary key(NUMERO_REGISTRO,FECHA_ENTRADA,EQUIPO_ID_EQUIPO),
CONSTRAINT FK_EQUIPO_REG_EQUIPO foreign key (EQUIPO_ID_EQUIPO) references DB_ENTRY_INDEX.EQUIPO (ID_EQUIPO)
on update cascade
);